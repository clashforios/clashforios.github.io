<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashforios.github.io/news/article-52663.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Mysql-EXPLAIN执行计划详解</title>
        <meta name="description" content="如何查看执行计划 官方文档执行计划介绍 我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。 我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。 " />
        <link rel="icon" href="/assets/website/img/clashforios/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash for IOS免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashforios.github.io/news/article-52663.htm" />
    <meta property="og:site_name" content="Clash for IOS免费机场订阅节点官网" />
    <meta property="og:title" content="Mysql-EXPLAIN执行计划详解" />
    <meta property="og:image" content="https://clashforios.github.io/uploads/20240922-1/fe4c711ead34d2ee561adbc2f5cb1a0b.webp" />
        <meta property="og:release_date" content="2025-02-07T07:19:52" />
    <meta property="og:updated_time" content="2025-02-07T07:19:52" />
        <meta property="og:description" content="如何查看执行计划 官方文档执行计划介绍 我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。 我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。 " />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Mysql-EXPLAIN执行计划详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/bootstrap.min.css">
    <!-- Slick Silder CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/slick.css">
    <!-- Fontawesome CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/fontawesome.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/style.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsivemenu.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/elements.css">
    <!-- Color CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/color.css">
    <!-- Responsive CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-547GV0YTCL"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-547GV0YTCL');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
    <!-- Main Wrapper Start -->
    <div class="main-wrapper">
                <header id="header-1" class="header-2">
            <div class="sticky-header">
                <div class="container">
                                        <a href="/" class="logo float-left">
                        <span>
                            Clash for IOS                        </span>
                    </a>
                                        <!-- /.logo End -->
                    <div class="navigation-wrap float-right">
                        <div class="menu-holder">
                            <div class="mobile-menu"></div>
                            <!-- /.mobile-menu End -->
                            <div class="main-menu navigation">
                                <nav>
                                    <ul>
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </nav>
                            </div>
                            <!-- /.navigation End -->
                        </div>
                        <!-- /.menu-holder End -->
                    </div>
                </div>
            </div>
        </header>
        <!-- /.header-2 End -->
        <!-- Sub Banner Start -->
        <div class="sub-banner">
            <div class="container">
                <div class="text text-right">
                    <h1 class="title">Mysql-EXPLAIN执行计划详解</h1>
                </div>
                <nav class="breadcrumb-outer" aria-label="breadcrumb">
                    <ol class="breadcrumb d-inline-flex">
                        <li class="breadcrumb-item"><a href="/">首页</a></li>
                        <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                        <li class="breadcrumb-item active" aria-current="page">正文</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- Sub Banner End -->
        <!-- Main Content Start -->
        <div class="main-content">
            <!-- About us Section Start -->
            <section class="about-us mb-30">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h2><a id="_1" rel="nofollow"></a>如何查看执行计划</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://dev.mysql.com/doc/refman/5.7/en/explain-output.html"  rel="nofollow">官方文档执行计划介绍</a></p> <p>我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。</p> <p>我们先创建三张表。一张课程表，一张老师表，一张老师联系方式表（没有任何索引）。</p> <pre><code class="prism language-sql"><span class="token keyword">DROP</span><span class="token keyword">TABLE</span><span class="token keyword">IF</span><span class="token keyword">EXISTS</span> course<span class="token punctuation">;</span><span class="token keyword">CREATE</span><span class="token keyword">TABLE</span><span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span><span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>cname<span class="token punctuation">`</span></span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>tid<span class="token punctuation">`</span></span><span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span><span class="token keyword">DEFAULT</span><span class="token keyword">CHARSET</span><span class="token operator">=</span> utf8mb4<span class="token punctuation">;</span><span class="token keyword">DROP</span><span class="token keyword">TABLE</span><span class="token keyword">IF</span><span class="token keyword">EXISTS</span> teacher<span class="token punctuation">;</span><span class="token keyword">CREATE</span><span class="token keyword">TABLE</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>tid<span class="token punctuation">`</span></span><span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>tname<span class="token punctuation">`</span></span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>tcid<span class="token punctuation">`</span></span><span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span><span class="token keyword">DEFAULT</span><span class="token keyword">CHARSET</span><span class="token operator">=</span> utf8mb4<span class="token punctuation">;</span><span class="token keyword">DROP</span><span class="token keyword">TABLE</span><span class="token keyword">IF</span><span class="token keyword">EXISTS</span> teacher_contact<span class="token punctuation">;</span><span class="token keyword">CREATE</span><span class="token keyword">TABLE</span><span class="token identifier"><span class="token punctuation">`</span>teacher_contact<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>tcid<span class="token punctuation">`</span></span><span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>phone<span class="token punctuation">`</span></span><span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token keyword">DEFAULT</span><span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span><span class="token keyword">DEFAULT</span><span class="token keyword">CHARSET</span><span class="token operator">=</span> utf8mb4<span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'mysql'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'jvm'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'juc'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'spring'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'bobo'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'老严'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'dahai'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher_contact<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'13688888888'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher_contact<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'18166669999'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher_contact<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'17722225555'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code>explain 的结果有很多的字段，我们详细地分析一下。</code></pre> <pre><code>先确认一下环境：</code></pre> <pre><code class="prism language-sql"><span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">show</span> variables<span class="token operator">like</span><span class="token string">'%engine%'</span><span class="token punctuation">;</span></code></pre> <h5><a id="1_id_82" rel="nofollow"></a><strong>1.</strong><strong>id</strong></h5> <pre><code>id 是查询序列编号。</code></pre> <p><strong>id 值不同</strong></p> <pre><code>id 值不同的时候，先查询 id 值大的（先大后小）。</code></pre> <pre><code class="prism language-sql"><span class="token comment">-- 查询 mysql 课程的老师手机号</span><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> 	tc<span class="token punctuation">.</span>phone<span class="token keyword">FROM</span> 	teacher_contact tc<span class="token keyword">WHERE</span> 	tcid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> tcid<span class="token keyword">FROM</span> teacher t<span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>tid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>tid<span class="token keyword">FROM</span> course c<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>cname<span class="token operator">=</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code>查询顺序：course c——teacher t——teacher_contact tc。</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/c0d898c4676786e6f5d94138ea3f8053.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <pre><code>先查课程表，再查老师表，最后查老师联系方式表。子查询只能以这种方式进行，只有拿到内层的结果之后才能进行外层的查询。</code></pre> <p><strong>id 值相同（从上往下）</strong></p> <pre><code class="prism language-sql"><span class="token comment">-- 查询课程 ID 为 2，或者联系表 ID 为 3 的老师</span><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> 	t<span class="token punctuation">.</span>tname<span class="token punctuation">,</span> 	c<span class="token punctuation">.</span>cname<span class="token punctuation">,</span> 	tc<span class="token punctuation">.</span>phone<span class="token keyword">FROM</span> 	teacher t<span class="token punctuation">,</span> 	course c<span class="token punctuation">,</span> 	teacher_contact tc<span class="token keyword">WHERE</span> 	t<span class="token punctuation">.</span>tid<span class="token operator">=</span> c<span class="token punctuation">.</span>tid<span class="token operator">AND</span> t<span class="token punctuation">.</span>tcid<span class="token operator">=</span> tc<span class="token punctuation">.</span>tcid<span class="token operator">AND</span><span class="token punctuation">(</span> c<span class="token punctuation">.</span>cid<span class="token operator">=</span><span class="token number">2</span><span class="token operator">OR</span> tc<span class="token punctuation">.</span>tcid<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/ba10b1bf8a761c8c4492f33b20415c26.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <pre><code>id 值相同时，表的查询顺序是</code></pre> <p><strong>从上往下</strong>顺序执行。例如这次查询的 id 都是 1，查询的顺序是 teacher t（3 条）——course c（4 条）——teacher_contact tc（3 条）。</p> <p><strong>既有相同也有不同</strong></p> <pre><code>如果 ID 有相同也有不同，就是 ID 不同的先大后小，ID 相同的从上往下。</code></pre> <h5><a id="2_select_type__149" rel="nofollow"></a><strong>2.</strong><strong>select type</strong><strong>查询类型</strong></h5> <pre><code>这里并没有列举全部（其它：DEPENDENT UNION、DEPENDENT SUBQUERY、MATERIALIZED、UNCACHEABLE SUBQUERY、UNCACHEABLE UNION）。</code></pre> <pre><code>下面列举了一些常见的查询类型：</code></pre> <p><strong>SIMPLE</strong></p> <pre><code>简单查询，不包含子查询，不包含关联查询 union。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/c134e0903d557336faccd52022578448.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p>再看一个包含子查询的案例：</p> <pre><code class="prism language-sql"><span class="token comment">-- 查询 mysql 课程的老师手机号</span><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> 	tc<span class="token punctuation">.</span>phone<span class="token keyword">FROM</span> 	teacher_contact tc<span class="token keyword">WHERE</span> 	tcid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> tcid<span class="token keyword">FROM</span> teacher t<span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>tid<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> c<span class="token punctuation">.</span>tid<span class="token keyword">FROM</span> course c<span class="token keyword">WHERE</span> c<span class="token punctuation">.</span>cname<span class="token operator">=</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/2c1ff6760fa1283cf8f30da59294353e.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>PRIMARY</strong></p> <pre><code>子查询 SQL 语句中的主查询，也就是最外面的那层查询。</code></pre> <p><strong>SUBQUERY</strong></p> <pre><code>子查询中所有的内层查询都是 SUBQUERY 类型的。</code></pre> <p><strong>DERIVED</strong></p> <pre><code>衍生查询，表示在得到最终查询结果之前会用到临时表。例如：</code></pre> <pre><code class="prism language-sql"><span class="token comment">-- 查询 ID 为 1 或 2 的老师教授的课程</span><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> 	cr<span class="token punctuation">.</span>cname<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> course<span class="token keyword">WHERE</span> tid<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> course<span class="token keyword">WHERE</span> tid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> cr<span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/52cffea049f3d3a35b6d473870c495d9.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <pre><code>对于关联查询，先执行右边的 table（UNION），再执行左边的 table，类型是DERIVED</code></pre> <p><strong>UNION</strong></p> <pre><code>用到了 UNION 查询。同上例。</code></pre> <p><strong>UNION RESULT</strong></p> <pre><code>主要是显示哪些表之间存在 UNION 查询。&lt;union2,3&gt;代表 id=2 和 id=3 的查询存在 UNION。同上例。</code></pre> <h5><a id="3_type__235" rel="nofollow"></a><strong>3.</strong><strong>type</strong><strong>连接类型</strong></h5> <p>https://dev.mysql.com/doc/refman/5.7/en/explain-output.html#explain-join-types</p> <pre><code>所有的连接类型中，上面的最好，越往下越差。</code></pre> <pre><code>在常用的链接类型中：system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; all</code></pre> <pre><code>这 里 并 没 有 列 举 全 部 （ 其 他 ： fulltext 、 ref_or_null 、 index_merger 、unique_subquery、index_subquery）。</code></pre> <p>以上访问类型除了 all，都能用到索引。</p> <p><strong>const</strong></p> <pre><code>主键索引或者唯一索引，只能查到一条数据的 SQL。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">DROP</span><span class="token keyword">TABLE</span><span class="token keyword">IF</span><span class="token keyword">EXISTS</span> single_data<span class="token punctuation">;</span><span class="token keyword">CREATE</span><span class="token keyword">TABLE</span> single_data<span class="token punctuation">(</span> id<span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">PRIMARY</span><span class="token keyword">KEY</span><span class="token punctuation">,</span> content<span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span> single_data<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> 	single_data a<span class="token keyword">WHERE</span> 	id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span></code></pre> <p><strong>system</strong></p> <pre><code>system 是 const 的一种特例，只有一行满足条件。例如：只有一条数据的系统表。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> mysql<span class="token punctuation">.</span>proxies_priv<span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/9402c5842c3798a2e549d1c117ab3c78.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>eq_ref</strong></p> <pre><code>通常出现在多表的 join 查询，表示对于前表的每一个结果,，都只能匹配到后表的一行结果。一般是唯一性索引的查询（UNIQUE 或 PRIMARY KEY）。</code></pre> <pre><code>eq_ref 是除 const 之外最好的访问类型。</code></pre> <pre><code>先删除 teacher 表中多余的数据，teacher_contact 有 3 条数据，teacher 表有 3条数据。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">DELETE</span><span class="token keyword">FROM</span> 	teacher<span class="token keyword">WHERE</span> 	tid<span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment">-- 备份</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'老严'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'bobo'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span><span class="token keyword">INTO</span><span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'seven'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></code></pre> <pre><code>为 teacher_contact 表的 tcid（第一个字段）创建主键索引。</code></pre> <pre><code class="prism language-sql"><span class="token comment">-- ALTER TABLE teacher_contact DROP PRIMARY KEY;</span><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> teacher_contact<span class="token keyword">ADD</span><span class="token keyword">PRIMARY</span><span class="token keyword">KEY</span><span class="token punctuation">(</span>tcid<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code>为 teacher 表的 tcid（第三个字段）创建普通索引。</code></pre> <pre><code class="prism language-sql"><span class="token comment">-- ALTER TABLE teacher DROP INDEX idx_tcid;</span><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> teacher<span class="token keyword">ADD</span><span class="token keyword">INDEX</span> idx_tcid<span class="token punctuation">(</span>tcid<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code>执行以下 SQL 语句：</code></pre> <pre><code class="prism language-sql"><span class="token keyword">select</span> t<span class="token punctuation">.</span>tcid<span class="token keyword">from</span> teacher t<span class="token punctuation">,</span>teacher_contact tc<span class="token keyword">where</span> t<span class="token punctuation">.</span>tcid<span class="token operator">=</span> tc<span class="token punctuation">.</span>tcid<span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/3ddde08aac554cee0dae303d0f9a8ac4.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <pre><code>此时的执行计划（teacher_contact 表是 eq_ref）：</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/539b2632086816389b53c19154e2de1f.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>小结：</strong></p> <p>以上三种 system，const，eq_ref，都是可遇而不可求的，基本上很难优化到这个状态。</p> <p><strong>ref</strong></p> <pre><code>查询用到了非唯一性索引，或者关联操作只使用了索引的最左前缀。</code></pre> <pre><code>例如：使用 tcid 上的普通索引查询：</code></pre> <pre><code class="prism language-sql"><span class="token keyword">explain</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> teacher<span class="token keyword">where</span> tcid<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/b78e4fbcdc001869f223f03d12ea7901.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>range</strong></p> <pre><code>索引范围扫描。</code></pre> <pre><code>如果 where 后面是 between and 或 &lt;或 &gt; 或 &gt;= 或 &lt;=或 in 这些，type 类型就为 range。</code></pre> <pre><code>不走索引一定是全表扫描（ALL），所以先加上普通索引。</code></pre> <pre><code class="prism language-sql"><span class="token comment">-- ALTER TABLE teacher DROP INDEX idx_tid;</span><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> teacher<span class="token keyword">ADD</span><span class="token keyword">INDEX</span> idx_tid<span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code>执行范围查询（字段上有普通索引）：</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> teacher t<span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>tid<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">-- 或</span><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> teacher t<span class="token keyword">WHERE</span> tid<span class="token operator">BETWEEN</span><span class="token number">1</span><span class="token operator">AND</span><span class="token number">2</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/8479e39afe4528fa4fecb1597ad12163.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <pre><code>IN 查询也是 range（字段有主键索引）</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span><span class="token operator">*</span><span class="token keyword">FROM</span> teacher_contact t<span class="token keyword">WHERE</span> tcid<span class="token operator">in</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/4b92f1f679419d36ddc0948da8af2d3c.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>index</strong></p> <pre><code>Full Index Scan，查询全部索引中的数据（比不走索引要快）。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> tid<span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/17b7cbd5e99e01d13feceb4fec29a5a7.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>all</strong></p> <pre><code>Full Table Scan，如果没有索引或者没有用到索引，type 就是 ALL。代表全表扫描。</code></pre> <p><strong>小结：</strong></p> <pre><code>一般来说，需要保证查询至少达到 range 级别，最好能达到 ref。</code></pre> <pre><code>ALL（全表扫描）和 index（查询全部索引）都是需要优化的。</code></pre> <h5><a id="4_possible_keykey_455" rel="nofollow"></a><strong>4.</strong><strong>possible_key、key</strong></h5> <pre><code>可能用到的索引和实际用到的索引。如果是 NULL 就代表没有用到索引。</code></pre> <pre><code>possible_key 可以有一个或者多个，可能用到索引不代表一定用到索引。</code></pre> <pre><code>反过来，possible_key 为空，key 可能有值吗？</code></pre> <pre><code>表上创建联合索引：</code></pre> <pre><code class="prism language-sql"><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> user_innodb<span class="token keyword">DROP</span><span class="token keyword">INDEX</span> comidx_name_phone<span class="token punctuation">;</span><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> user_innodb<span class="token keyword">add</span><span class="token keyword">INDEX</span> comidx_name_phone<span class="token punctuation">(</span>name<span class="token punctuation">,</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code>执行计划（改成 select name 也能用到索引）：</code></pre> <pre><code class="prism language-sql"><span class="token keyword">explain</span><span class="token keyword">select</span> phone<span class="token keyword">from</span> user_innodb<span class="token keyword">where</span> phone<span class="token operator">=</span><span class="token string">'126'</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/4dcf18714790e8fa27925a855267d5d9.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <pre><code>结论：是有可能的（这里是覆盖索引的情况）。</code></pre> <pre><code>如果通过分析发现没有用到索引，就要检查 SQL 或者创建索引。</code></pre> <h5><a id="5_key_len_498" rel="nofollow"></a><strong>5.</strong><strong>key_len</strong></h5> <pre><code>索引的长度（使用的字节数）。跟索引字段的类型、长度有关。</code></pre> <pre><code>表上有联合索引：KEY</code></pre> <p><code>comidx_name_phone</code> (<code>name</code>,<code>phone</code>)</p> <pre><code class="prism language-sql"><span class="token keyword">explain</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> user_innodb<span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'jim'</span><span class="token punctuation">;</span></code></pre> <h5><a id="6_rows_514" rel="nofollow"></a><strong>6.</strong><strong>rows</strong></h5> <pre><code>MySQL 认为扫描多少行才能返回请求的数据，是一个预估值。一般来说行数越少越好。</code></pre> <h5><a id="7_filtered_520" rel="nofollow"></a><strong>7.</strong><strong>filtered</strong></h5> <pre><code>这个字段表示存储引擎返回的数据在 server 层过滤后，剩下多少满足查询的记录数量的比例，它是一个百分比。</code></pre> <h5><a id="8_ref_526" rel="nofollow"></a><strong>8.</strong><strong>ref</strong></h5> <pre><code>使用哪个列或者常数和索引一起从表中筛选数据。</code></pre> <h5><a id="9_Extra_532" rel="nofollow"></a><strong>9.</strong><strong>Extra</strong></h5> <pre><code>执行计划给出的额外的信息说明。</code></pre> <p><strong>using index</strong></p> <pre><code>用到了覆盖索引，不需要回表。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">SELECT</span> tid<span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span></code></pre> <p><strong>using where</strong></p> <pre><code>使用了 where 过滤，表示存储引擎返回的记录并不是所有的都满足查询条件，需要在 server 层进行过滤（跟是否使用索引没有关系）。</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> user_innodb<span class="token keyword">where</span> phone<span class="token operator">=</span><span class="token string">'13866667777'</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/e2d198fee38bfe16a371d92804aa8343.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>using filesort</strong></p> <pre><code>不能使用索引来排序，用到了额外的排序（跟磁盘或文件没有关系）。需要优化。（复合索引的前提）</code></pre> <pre><code class="prism language-sql"><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> user_innodb<span class="token keyword">DROP</span><span class="token keyword">INDEX</span> comidx_name_phone<span class="token punctuation">;</span><span class="token keyword">ALTER</span><span class="token keyword">TABLE</span> user_innodb<span class="token keyword">add</span><span class="token keyword">INDEX</span> comidx_name_phone<span class="token punctuation">(</span>name<span class="token punctuation">,</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> user_innodb<span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">'jim'</span><span class="token keyword">order</span><span class="token keyword">by</span> id<span class="token punctuation">;</span></code></pre> <pre><code>（order by id 引起）</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/5fc850ef3716ef9e6fef867810bb6f92.jpg" alt="Mysql-EXPLAIN执行计划详解"></p> <p><strong>using temporary</strong></p> <pre><code>用到了临时表。例如（以下不是全部的情况）：</code></pre> <pre><code>1、distinct 非索引列</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">select</span><span class="token keyword">DISTINCT</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token keyword">from</span> teacher t<span class="token punctuation">;</span></code></pre> <pre><code>2、group by 非索引列</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">select</span> tname<span class="token keyword">from</span> teacher<span class="token keyword">group</span><span class="token keyword">by</span> tname<span class="token punctuation">;</span></code></pre> <pre><code>3、使用 join 的时候，group 任意列</code></pre> <pre><code class="prism language-sql"><span class="token keyword">EXPLAIN</span><span class="token keyword">select</span> t<span class="token punctuation">.</span>tid<span class="token keyword">from</span> teacher t<span class="token keyword">join</span> course c<span class="token keyword">on</span> t<span class="token punctuation">.</span>tid<span class="token operator">=</span> c<span class="token punctuation">.</span>tid<span class="token keyword">group</span><span class="token keyword">by</span> t<span class="token punctuation">.</span>tid<span class="token punctuation">;</span></code></pre> <pre><code>需要优化，例如创建复合索引。</code></pre> <p>总结一下：</p> <p>模拟优化器执行 SQL 查询语句的过程，来知道 MySQL 是怎么处理一条 SQL 语句的。通过这种方式我们可以分析语句或者表的性能瓶颈。</p> <p>分析出问题之后，就是对 SQL 语句的具体优化。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-52661.htm">SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪</a></p>
                                        <p>下一个：<a href="/news/article-53197.htm">动物疫苗多少钱一支啊图片及价格查询表（动物疫苗法最新消息2019）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-24349.htm" title="中国兽药厂家二十强企业 中国兽药厂家二十强企业有哪些">中国兽药厂家二十强企业 中国兽药厂家二十强企业有哪些</a></li>
                        <li class="py-2"><a href="/news/article-31864.htm" title="Flutter实现心动的动画特效_Android">Flutter实现心动的动画特效_Android</a></li>
                        <li class="py-2"><a href="/news/article-52661.htm" title="SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪">SpringBoot整合SpringCloud组件-Sleuth&amp;ZipKin链路追踪</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-free-node-subscribe.htm" title="2月1日→18.5M/S|2025年最新免费节点Clash for IOS订阅链接地址">2月1日→18.5M/S|2025年最新免费节点Clash for IOS订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-43568.htm" title="动物医院上班工资怎么样知乎（动物医院的医生工资）">动物医院上班工资怎么样知乎（动物医院的医生工资）</a></li>
                        <li class="py-2"><a href="/news/article-33772.htm" title="HTML页面的加载顺序">HTML页面的加载顺序</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-node-subscribe.htm" title="11月12日→20.8M/S|2024年最新免费节点Clash for IOS订阅链接地址">11月12日→20.8M/S|2024年最新免费节点Clash for IOS订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-clash-node-daily-updates.htm" title="12月7日→19.7M/S|2024年最新免费节点Clash for IOS订阅链接地址">12月7日→19.7M/S|2024年最新免费节点Clash for IOS订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-17-free-node-subscribe-links.htm" title="12月17日→18.9M/S|2024年最新免费节点Clash for IOS订阅链接地址">12月17日→18.9M/S|2024年最新免费节点Clash for IOS订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-51624.htm" title="Python 操作HDFS">Python 操作HDFS</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">91</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </section>
            <!-- About us Section End -->
        </div>
        <!-- Main Content End -->
                <!-- Copyright Start -->
        <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p>
                <a href="/">Clash for IOS免费机场订阅节点官网</a> 版权所有 Powered by WordPress
            </p>
        </div>
        <!-- Copyright End -->
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="/assets/website/js/frontend/clashforios/jquery.js"></script>
        <script src="/assets/website/js/frontend/clashforios/popper.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/responsivemenu.js"></script>
        <script src="/assets/website/js/frontend/clashforios/slick.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/masonry.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/custom.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- Main Wrapper End -->
</body>

</html>